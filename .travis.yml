# Cache node_modules and typings for future runs. This does make the builds
# sometimes fail because of a bad cache but usually this is a huge test
# performance win.
cache:
  directories:
    - node_modules
    - typings
# Set up environment variables for tests
env:
  global:
    # ASANA_GITHUB_TOKEN = ...
    - secure: "DAwDB8TF1HEzqBzVHDR88kAOXOzcHx0AeFaazofh6OGDbxGuIbNWOgv8xXb4F1GScBX26KXwQPcskvP/qWJ49jW91iePcsTAIDtNLgg7UGj/L9eSeKyoHb93l7tah02zZzHjn4vCKjQfMeLAXdYbZf2VX5PM2cRdXlLx24WaqBY="
    # TSD_GITHUB_TOKEN = ... (for higher tsd rate limits)
    -  secure: "QdGHv/Z6Cd+GYLwv8C7AYBoM5gEwKR9KslWYSVN6oRZ8wUq+JBXBS1ItqGjNxprCjhISi9989Qnvzr4FYbuekqqSIsSHkIgQN35j2pRGahaQifR/riKDzdla2Y3WxNCUbO9HYCoJTzOmV7sFI6xQqAS6vklkF/Y/SvkpsYRDJSA="
    # Use a better mocha reporter for Travis
    - MOCHA_REPORTER=spec
# Use the Travis Docker build system which is faster
sudo: false
# Specify to use node
language: node_js
# Specify the node versions to run on
node_js:
  - "0.12"
# Make sure to have typings before the test
before_script:
  - npm run typings
before_deploy:
  - npm run web
# Push to gh-pages
# TODO: Re-enable automatic push to gh-pages
# after_success:
#  - git config --global user.email "git@asana.com"
#  - git config --global user.name "Asana"
#  # only publish to gh-pages from the master branch.
#  - test $TRAVIS_PULL_REQUEST == "false" && test $TRAVIS_BRANCH == "master" && gulp gh-pages
