/// <reference path="../interfaces.ts" />

/**
 * This file is auto-generated by the `asana-api-meta` NodeJS package.
 * We try to keep the generated code pretty clean but there will be lint
 * errors that are just not worth fixing.
 */
/* tslint:disable:max-line-length */
/* tslint:disable:eofline */
var resource = <Resource>{
  "name": "job",
  "comment": "A _job_ represents a process that handles asynchronous work.\n\nJobs are created when an endpoint requests an action that will be handled asynchronously.\nSuch as project or task duplication.\n",
  "notes": [
    "Only the creator of the duplication process can access the duplication status\nof the new object.\n"
  ],
  "properties": [
    {
      "name": "gid",
      "type": "Gid",
      "example_values": [
        "\"1234\""
      ],
      "access": "Read-only",
      "comment": "Globally unique ID of the job.\n"
    },
    {
      "name": "resource_type",
      "type": "Enum",
      "access": "Read-only",
      "comment": "The resource type of this resource. The value for this resource is always `job`.\n",
      "example_values": [
        "\"job\""
      ],
      "values": [
        {
          "name": "job",
          "comment": "A job resource type."
        }
      ]
    },
    {
      "name": "resource_subtype",
      "type": "Enum",
      "access": "Read-only",
      "comment": "The type of job.\n",
      "example_values": [
        "\"duplicate_project\"",
        "\"duplicate_task\""
      ],
      "values": [
        {
          "name": "duplicate_project",
          "comment": "A job that duplicates a project."
        },
        {
          "name": "duplicate_task",
          "comment": "A job that duplicates a task."
        }
      ]
    },
    {
      "name": "status",
      "type": "Enum",
      "access": "Read-only",
      "comment": "The status of the job.",
      "example_values": [
        "\"not_started\"",
        "\"in_progress\"",
        "\"succeeded\"",
        "\"failed\""
      ],
      "values": [
        {
          "name": "not_started",
          "comment": "The job has not started."
        },
        {
          "name": "in_progress",
          "comment": "The job is in progress."
        },
        {
          "name": "succeeded",
          "comment": "The job has completed."
        },
        {
          "name": "failed",
          "comment": "The job has not started."
        }
      ]
    },
    {
      "name": "new_project",
      "type": "Project",
      "example_values": [
        "{ id: 1234, gid: \"1234\", name: 'Bugs' }"
      ],
      "access": "Read-only",
      "comment": "Contains the new project if the job created a new project.\n"
    },
    {
      "name": "new_task",
      "type": "Task",
      "example_values": [
        "{ id: 1234, gid: \"1234\", name: 'Bug task' }"
      ],
      "access": "Read-only",
      "comment": "Contains the new task if the job created a new task.\n"
    }
  ],
  "action_classes": [
    {
      "name": "Get a job",
      "url": "get"
    }
  ],
  "actions": [
    {
      "name": "findById",
      "class": "get",
      "method": "GET",
      "path": "/jobs/%s",
      "params": [
        {
          "name": "job",
          "type": "Gid",
          "example_values": [
            "\"124816\""
          ],
          "comment": "The job to get.",
          "required": true
        }
      ],
      "comment": "Returns the complete job record for a single job.\n"
    }
  ]
};
export = resource;