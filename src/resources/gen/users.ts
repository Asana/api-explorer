/// <reference path="../interfaces.ts" />

/**
 * This file is auto-generated by the `asana-api-meta` NodeJS package.
 * We try to keep the generated code pretty clean but there will be lint
 * errors that are just not worth fixing.
 */
/* tslint:disable:max-line-length */
var resource = <Resource>{
  "name": "user",
  "comment": "A _user_ object represents an account in Asana that can be given access to\nvarious workspaces, projects, and tasks.\n\nLike other objects in the system, users are referred to by numerical IDs.\nHowever, the special string identifier `me` can be used anywhere\na user ID is accepted, to refer to the current authenticated user.\n",
  "properties": [
    {
      "name": "id",
      "type": "Id",
      "example_values": [
        "1234"
      ],
      "read_only": true,
      "comment": "Globally unique identifier for this object.\n"
    },
    {
      "name": "email",
      "type": "String",
      "example_values": [
        "'gsanchez@example.com'"
      ],
      "read_only": true,
      "comment": "The user's email address.\n"
    },
    {
      "name": "photo",
      "type": "Struct",
      "example_values": [
        "{ \"image_21x21\": \"https://...\", ... }"
      ],
      "read_only": true,
      "comment": "A map of the user's profile photo in various sizes, or null if no photo\nis set. Sizes provided are 21, 27, 36, 60, and 128. Images are in\nPNG format.\n"
    },
    {
      "name": "workspaces",
      "type": "Array",
      "example_values": [
        "[ { id: 14916, name: \"My Workspace\"} ... ]"
      ],
      "read_only": true,
      "comment": "Workspaces and organizations this user may access.\n",
      "notes": [
        "The API will only return workspaces and organizations that also contain the authenticated user."
      ]
    }
  ],
  "actions": [
    {
      "name": "me",
      "method": "GET",
      "path": "/users/me",
      "comment": "Returns the full user record for the currently authenticated user.\n"
    },
    {
      "name": "findById",
      "method": "GET",
      "path": "/users/%d",
      "params": [
        {
          "name": "user",
          "type": "Id",
          "example_values": [
            "14641"
          ],
          "comment": "Globally unique identifier for the user.\n",
          "required": true
        }
      ],
      "comment": "Returns the full user record for a single user.\n"
    },
    {
      "name": "findByWorkspace",
      "method": "GET",
      "path": "/workspaces/%d/users",
      "collection": true,
      "collection_cannot_paginate": true,
      "params": [
        {
          "name": "workspace",
          "type": "Id",
          "example_values": [
            "1331"
          ],
          "comment": "The workspace in which to get users.",
          "required": true
        }
      ],
      "comment": "Returns the user records for all users in all workspaces and organizations\naccessible to the authenticated user.\n"
    },
    {
      "name": "findAll",
      "method": "GET",
      "path": "/users",
      "collection": true,
      "params": [
        {
          "name": "workspace",
          "type": "Id",
          "example_values": [
            "1331"
          ],
          "comment": "The workspace or organization to filter users on."
        }
      ],
      "comment": "Returns the user records for all users in the specified workspace or\norganization.\n"
    }
  ]
};
export = resource;
