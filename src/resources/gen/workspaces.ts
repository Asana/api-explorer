/// <reference path="../interfaces.ts" />

/**
 * This file is auto-generated by the `asana-api-meta` NodeJS package.
 * We try to keep the generated code pretty clean but there will be lint
 * errors that are just not worth fixing.
 */
/* tslint:disable:max-line-length */
var resource = <Resource>{
  "name": "workspace",
  "comment": "A _workspace_ is the highest-level organizational unit in Asana. All projects\nand tasks have an associated workspace.\n\nAn _organization_ is a special kind of workspace that represents a company.\nIn an organization, you can group your projects into teams. You can read\nmore about how organizations work on the Asana Guide.\nTo tell if your workspace is an organization or not, check its\n`is_organization` property.\n\nOver time, we intend to migrate most workspaces into organizations and to\nrelease more organization-specific functionality. We may eventually deprecate\nusing workspace-based APIs for organizations. Currently, and until after\nsome reasonable grace period following any further announcements, you can\nstill reference organizations in any `workspace` parameter.\n",
  "properties": [
    {
      "name": "id",
      "type": "Id",
      "example_values": [
        "1234"
      ],
      "read_only": true,
      "comment": "Globally unique identifier for this object.\n"
    },
    {
      "name": "name",
      "type": "String",
      "example_values": [
        "Apollo Moon Landing"
      ],
      "comment": "The name of the workspace.\n"
    },
    {
      "name": "is_organization",
      "type": "Boolean",
      "example_values": [
        "false"
      ],
      "comment": "True iff the workspace is an _organization_.\n"
    }
  ],
  "actions": [
    {
      "name": "findById",
      "method": "GET",
      "path": "/workspaces/%d",
      "params": [
        {
          "name": "workspace",
          "type": "Id",
          "example_values": [
            "1331"
          ],
          "comment": "Globally unique identifier for the workspace or organization.\n",
          "required": true
        }
      ],
      "comment": "Returns the full workspace record for a single workspace.\n"
    },
    {
      "name": "findAll",
      "method": "GET",
      "path": "/workspaces",
      "collection": true,
      "comment": "Returns the compact records for all workspaces visible to the authorized user.\n"
    },
    {
      "name": "update",
      "method": "PUT",
      "path": "/workspaces/%d",
      "params": [
        {
          "name": "workspace",
          "type": "Id",
          "example_values": [
            "1331"
          ],
          "comment": "The workspace to update.",
          "required": true
        }
      ],
      "comment": "Update properties on a workspace. Returns the complete, updated workspace record.\n"
    },
    {
      "name": "typeahead",
      "method": "GET",
      "path": "/workspaces/%d/typeahead",
      "params": [
        {
          "name": "workspace",
          "type": "Id",
          "example_values": [
            "1331"
          ],
          "comment": "The workspace to fetch objects from.",
          "required": true
        },
        {
          "name": "type",
          "type": "Enum",
          "values": [
            {
              "name": "task",
              "comment": "A task."
            },
            {
              "name": "project",
              "comment": "A project."
            },
            {
              "name": "user",
              "comment": "A user."
            },
            {
              "name": "tag",
              "comment": "A tag."
            }
          ],
          "required": true,
          "comment": "The type of values the typeahead should return.\nNote that unlike in the names of endpoints, the types listed here are\nin singular form (e.g. `task`). Using multiple types is not yet supported.\n"
        },
        {
          "name": "query",
          "type": "String",
          "comment": "The string that will be used to search for relevant objects. If an\nempty string is passed in, the API will currently return an empty\nresult set.\n"
        },
        {
          "name": "count",
          "type": "Number",
          "comment": "The number of results to return. The default is `20` if this\nparameter is omitted, with a minimum of `1` and a maximum of `100`.\nIf there are fewer results found than requested, all will be returned.\n"
        }
      ],
      "collection": true,
      "comment": "Retrieves objects in the workspace based on an auto-completion/typeahead\nsearch algorithm. This feature is meant to provide results quickly, so do\nnot rely on this API to provide extremely accurate search results. The\nresult set is limited to a single page of results with a maximum size,\nso you won't be able to fetch large numbers of results.\n"
    }
  ]
};
export = resource;
