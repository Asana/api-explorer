/// <reference path="../interfaces.ts" />

/**
 * This file is auto-generated by the `asana-api-meta` NodeJS package.
 * We try to keep the generated code pretty clean but there will be lint
 * errors that are just not worth fixing.
 */
/* tslint:disable:max-line-length */
/* tslint:disable:eofline */
var resource = <Resource>{
  "name": "portfolio",
  "comment": "A _portfolio_ gives a high-level overview of the status of multiple\ninitiatives in Asana.  Portfolios provide a dashboard overview of the state\nof multiple items, including a progress report and the most recent\n[project status](/developers/api-reference/project_statuses) update.\n\nPortfolios have some restrictions on size. Each portfolio has a maximum of 250\nitems and, like projects, a maximum of 20 custom fields.\n",
  "notes": [
    ""
  ],
  "properties": [
    {
      "name": "id",
      "type": "Id",
      "example_values": [
        "1234"
      ],
      "access": "Read-only",
      "comment": "Globally unique ID of the portfolio.\n**Note: This field is under active migration to the [`gid` field](#field-gid)--please see our [blog post](/developers/documentation/getting-started/deprecations) for more information.**\n"
    },
    {
      "name": "gid",
      "type": "Gid",
      "example_values": [
        "\"1234\""
      ],
      "access": "Read-only",
      "comment": "Globally unique ID of the portfolio.\n"
    },
    {
      "name": "resource_type",
      "type": "Enum",
      "access": "Read-only",
      "comment": "The resource type of this resource. The value for this resource is always `portfolio`.\n",
      "example_values": [
        "\"portfolio\""
      ],
      "values": [
        {
          "name": "portfolio",
          "comment": "A portfolio resource type."
        }
      ]
    },
    {
      "name": "name",
      "type": "String",
      "example_values": [
        "\"Product launch\""
      ],
      "comment": "Name of the portfolio.\n"
    },
    {
      "name": "owner",
      "type": "Struct",
      "example_values": [
        "{ id: 12345, gid: \"12345\", resource_type: \"user\", name: 'Tim Bizarro' }"
      ],
      "access": "Read-only",
      "comment": "The current owner of the portfolio. Cannot be null.\n"
    },
    {
      "name": "created_at",
      "type": "String",
      "example_values": [
        "'2012-02-22T02:06:58.147Z'"
      ],
      "access": "Read-only",
      "comment": "The time at which this portfolio was created.\n"
    },
    {
      "name": "created_by",
      "type": "User",
      "example_values": [
        "{ id: 12345, gid: \"12345\", resource_type: \"user\", name: 'Tim Bizarro' }",
        "null"
      ],
      "access": "Read-only",
      "comment": "The user that created the portfolio.\n"
    },
    {
      "name": "custom_field_settings",
      "type": "Array",
      "example_values": [
        "[ { id: 258147, gid: \"258147\", custom_field: {id: 1646, gid: \"1646\", name: \"Priority\", type: \"enum\"}, parent: {id: 36985, gid: \"36985\", name: \"Product launch\"} }, ...]"
      ],
      "access": "Read-only",
      "comment": "Array of custom field settings applied to the portfolio.\n"
    },
    {
      "name": "color",
      "type": "String",
      "example_values": [
        "\"dark-red\"",
        "\"light-blue\"",
        "\"none\""
      ],
      "comment": "Must be either `none` or one of: `dark-pink`, `dark-green`, `dark-blue`,\n`dark-red`, `dark-teal`, `dark-brown`, `dark-orange`, `dark-purple`,\n`dark-warm-gray`, `light-pink`, `light-green`, `light-blue`, `light-red`,\n`light-teal`, `light-yellow`, `light-orange`, `light-purple`,\n`light-warm-gray`.\n"
    },
    {
      "name": "workspace",
      "type": "Workspace",
      "example_values": [
        "{ id: 14916, gid: \"14916\", name: 'My Workspace' }"
      ],
      "access": "Create-only",
      "comment": "The workspace or organization that the portfolio belongs to.\n"
    },
    {
      "name": "members",
      "type": "Array",
      "example_values": [
        "[ { id: 1123, gid: \"1123\", resource_type: \"user\", name: 'Mittens' }, ... ]"
      ],
      "comment": "Members of the portfolio.\n"
    }
  ],
  "action_classes": [
    {
      "name": "Create a portfolio",
      "url": "create"
    },
    {
      "name": "Get a portfolio",
      "url": "get-single"
    },
    {
      "name": "Update a portfolio",
      "url": "update"
    },
    {
      "name": "Delete a portfolio",
      "url": "delete"
    },
    {
      "name": "Query for portfolios",
      "url": "query"
    },
    {
      "name": "Items in a portfolio",
      "url": "items"
    },
    {
      "name": "Work with portfolio memberships",
      "url": "members"
    },
    {
      "name": "Custom fields on a portfolio",
      "url": "custom-field-settings"
    }
  ],
  "actions": [
    {
      "name": "create",
      "class": "create",
      "method": "POST",
      "path": "/portfolios",
      "params": [
        {
          "name": "workspace",
          "type": "Gid",
          "example_values": [
            "\"1331\""
          ],
          "comment": "The workspace or organization in which to create the portfolio.",
          "required": true
        },
        {
          "name": "name",
          "required": true,
          "type": "String",
          "example_values": [
            "\"Product launch\""
          ],
          "comment": "The name of the newly-created portfolio"
        },
        {
          "name": "color",
          "required": false,
          "type": "String",
          "example_values": [
            "\"dark-red\"",
            "\"light-blue\"",
            "\"none\""
          ],
          "comment": "An optional color for the portfolio"
        }
      ],
      "comment": "Creates a new portfolio in the given workspace with the supplied name.\n\nNote that portfolios created in the Asana UI may have some state\n(like the \"Priority\" custom field) which is automatically added to the\nportfolio when it is created. Portfolios created via our API will **not**\nbe created with the same initial state to allow integrations to create\ntheir own starting state on a portfolio.\n"
    },
    {
      "name": "findById",
      "class": "get-single",
      "method": "GET",
      "path": "/portfolios/%s",
      "params": [
        {
          "name": "portfolio",
          "type": "Gid",
          "example_values": [
            "\"36985\""
          ],
          "comment": "The portfolio to get.",
          "required": true
        }
      ],
      "comment": "Returns the complete record for a single portfolio.\n"
    },
    {
      "name": "update",
      "class": "update",
      "method": "PUT",
      "path": "/portfolios/%s",
      "params": [
        {
          "name": "portfolio",
          "type": "Gid",
          "example_values": [
            "\"36985\""
          ],
          "comment": "The portfolio to update.",
          "required": true
        }
      ],
      "comment": "An existing portfolio can be updated by making a PUT request on the\nURL for that portfolio. Only the fields provided in the `data` block will be\nupdated; any unspecified fields will remain unchanged.\n\nReturns the complete updated portfolio record.\n"
    },
    {
      "name": "delete",
      "class": "delete",
      "method": "DELETE",
      "path": "/portfolios/%s",
      "params": [
        {
          "name": "portfolio",
          "type": "Gid",
          "example_values": [
            "\"36985\""
          ],
          "comment": "The portfolio to delete.",
          "required": true
        }
      ],
      "comment": "An existing portfolio can be deleted by making a DELETE request\non the URL for that portfolio.\n\nReturns an empty data record.\n"
    },
    {
      "name": "findAll",
      "class": "query",
      "method": "GET",
      "path": "/portfolios",
      "collection": true,
      "comment": "Returns a list of the portfolios in compact representation that are owned\nby the current API user.\n",
      "params": [
        {
          "name": "workspace",
          "type": "Gid",
          "example_values": [
            "\"1331\""
          ],
          "comment": "The workspace or organization to filter portfolios on.",
          "required": true
        },
        {
          "name": "owner",
          "type": "String",
          "example_values": [
            "\"14641\"",
            "\"me\"",
            "\"sashimi@asana.com\""
          ],
          "comment": "The user who owns the portfolio. Currently, API users can only get a\nlist of portfolios that they themselves own.\n",
          "required": true
        }
      ]
    },
    {
      "name": "getItems",
      "class": "items",
      "method": "GET",
      "path": "/portfolios/%s/items",
      "collection": true,
      "comment": "Get a list of the items in compact form in a portfolio.\n",
      "params": [
        {
          "name": "portfolio",
          "type": "Gid",
          "example_values": [
            "\"36985\""
          ],
          "comment": "The portfolio from which to get the list of items.",
          "required": true
        }
      ]
    },
    {
      "name": "addItem",
      "class": "items",
      "method": "POST",
      "path": "/portfolios/%s/addItem",
      "comment": "Add an item to a portfolio.\n\nReturns an empty data block.\n",
      "params": [
        {
          "name": "portfolio",
          "type": "Gid",
          "example_values": [
            "\"36985\""
          ],
          "comment": "The portfolio to which to add an item.",
          "required": true
        },
        {
          "name": "item",
          "type": "Gid",
          "example_values": [
            "\"13579\""
          ],
          "comment": "The item to add to the portfolio.",
          "required": true
        },
        {
          "name": "insert_before",
          "type": "Gid",
          "example_values": [
            "\"13579\""
          ],
          "comment": "An id of an item in this portfolio. The new item will be added before the one specified here.\n`insert_before` and `insert_after` parameters cannot both be specified.\n"
        },
        {
          "name": "insert_after",
          "type": "Gid",
          "example_values": [
            "\"13579\""
          ],
          "comment": "An id of an item in this portfolio. The new item will be added after the one specified here.\n`insert_before` and `insert_after` parameters cannot both be specified.\n"
        }
      ]
    },
    {
      "name": "removeItem",
      "class": "items",
      "method": "POST",
      "path": "/portfolios/%s/removeItem",
      "comment": "Remove an item to a portfolio.\n\nReturns an empty data block.\n",
      "params": [
        {
          "name": "portfolio",
          "type": "Gid",
          "example_values": [
            "\"36985\""
          ],
          "comment": "The portfolio from which to remove the item.",
          "required": true
        },
        {
          "name": "item",
          "type": "Gid",
          "example_values": [
            "\"13579\""
          ],
          "comment": "The item to remove from the portfolio.",
          "required": true
        }
      ]
    },
    {
      "name": "addMembers",
      "class": "members",
      "method": "POST",
      "path": "/portfolios/%s/addMembers",
      "params": [
        {
          "name": "portfolio",
          "type": "Gid",
          "example_values": [
            "\"13579\""
          ],
          "comment": "The portfolio to add members to.",
          "required": true
        },
        {
          "name": "members",
          "type": "Array",
          "example_values": [
            "[\"133713\", \"184253\"]"
          ],
          "required": true,
          "comment": "An array of user ids."
        }
      ],
      "comment": "Adds the specified list of users as members of the portfolio. Returns the updated portfolio record.\n"
    },
    {
      "name": "removeMembers",
      "class": "members",
      "method": "POST",
      "path": "/portfolios/%s/removeMembers",
      "params": [
        {
          "name": "portfolio",
          "type": "Gid",
          "example_values": [
            "\"36985\""
          ],
          "comment": "The portfolio to remove members from.",
          "required": true
        },
        {
          "name": "members",
          "type": "Array",
          "example_values": [
            "[\"133713\", \"184253\"]"
          ],
          "required": true,
          "comment": "An array of user ids."
        }
      ],
      "comment": "Removes the specified list of members from the portfolio. Returns the updated portfolio record.\n"
    },
    {
      "name": "customFieldSettings",
      "class": "custom-field-settings",
      "method": "GET",
      "path": "/portfolios/%s/custom_field_settings",
      "collection": true,
      "comment": "Get the custom field settings on a portfolio.\n",
      "params": [
        {
          "name": "portfolio",
          "type": "Gid",
          "example_values": [
            "\"36985\""
          ],
          "comment": "The portfolio from which to get the custom field settings.",
          "required": true
        }
      ]
    },
    {
      "name": "addCustomFieldSetting",
      "class": "custom-field-settings",
      "method": "POST",
      "path": "/portfolios/%s/addCustomFieldSetting",
      "comment": "Create a new custom field setting on the portfolio. Returns the full\nrecord for the new custom field setting.\n",
      "params": [
        {
          "name": "portfolio",
          "type": "Gid",
          "example_values": [
            "\"36985\""
          ],
          "comment": "The portfolio onto which to add the custom field.",
          "required": true
        },
        {
          "name": "custom_field",
          "type": "Gid",
          "example_values": [
            "\"124578\""
          ],
          "comment": "The id of the custom field to add to the portfolio.",
          "required": true
        },
        {
          "name": "is_important",
          "type": "Boolean",
          "example_values": [
            "false"
          ],
          "comment": "Whether this field should be considered important to this portfolio (for instance, to display in the list view of items in the portfolio).\n"
        },
        {
          "name": "insert_before",
          "type": "Gid",
          "example_values": [
            "\"258147\""
          ],
          "comment": "An id of a custom field setting on this portfolio. The new custom field setting will be added before this one.\n`insert_before` and `insert_after` parameters cannot both be specified.\n"
        },
        {
          "name": "insert_after",
          "type": "Gid",
          "example_values": [
            "\"258147\""
          ],
          "comment": "An id of a custom field setting on this portfolio. The new custom field setting will be added after this one.\n`insert_before` and `insert_after` parameters cannot both be specified.\n"
        }
      ]
    },
    {
      "name": "removeCustomFieldSetting",
      "class": "custom-field-settings",
      "method": "POST",
      "path": "/portfolios/%s/removeCustomFieldSetting",
      "comment": "Remove a custom field setting on the portfolio. Returns an empty data\nblock.\n",
      "params": [
        {
          "name": "portfolio",
          "type": "Gid",
          "example_values": [
            "\"36985\""
          ],
          "comment": "The portfolio from which to remove the custom field.",
          "required": true
        },
        {
          "name": "custom_field",
          "required": true,
          "type": "Gid",
          "example_values": [
            "\"124578\""
          ],
          "comment": "The id of the custom field to remove from this portfolio."
        }
      ]
    }
  ]
};
export = resource;
