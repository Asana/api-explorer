/// <reference path="../interfaces.ts" />

/**
 * This file is auto-generated by the `asana-api-meta` NodeJS package.
 * We try to keep the generated code pretty clean but there will be lint
 * errors that are just not worth fixing.
 */
/* tslint:disable:max-line-length */
/* tslint:disable:eofline */
var resource = <Resource>{
  "name": "project",
  "comment": "A _project_ represents a prioritized list of tasks in Asana or a board with\ncolumns of tasks represented as cards. It exists in a single workspace or\norganization and is accessible to a subset of users in that workspace or\norganization, depending on its permissions.\n\nProjects in organizations are shared with a single team. You cannot currently\nchange the team of a project via the API. Non-organization workspaces do not\nhave teams and so you should not specify the team of project in a regular\nworkspace.\n",
  "notes": [
    "Followers of a project are a subset of the members of that project.\nFollowers of a project will receive all updates including tasks created,\nadded and removed from that project. Members of the project have access to\nand will receive status updates of the project. Adding followers to a\nproject will add them as members if they are not already, removing\nfollowers from a project will not affect membership.\n"
  ],
  "properties": [
    {
      "name": "name",
      "type": "String",
      "example_values": [
        "'Stuff to buy'"
      ],
      "comment": "Name of the project. This is generally a short sentence fragment that fits\non a line in the UI for maximum readability. However, it can be longer.\n"
    },
    {
      "name": "id",
      "type": "Id",
      "example_values": [
        "1234"
      ],
      "access": "Read-only",
      "comment": "Globally unique ID of the project.\n"
    },
    {
      "name": "owner",
      "type": "User",
      "example_values": [
        "{ id: 12345, name: 'Tim Bizarro' }",
        "null"
      ],
      "comment": "The current owner of the project, may be null.\n"
    },
    {
      "name": "current_status",
      "type": "Struct",
      "example_values": [
        "{ 'color': green, 'text': 'All gravy!', 'author':{ ... } ... } "
      ],
      "comment": "A description of the project's status containing a color (must be either\n`null` or one of: `green`, `yellow`, `red`) and a short description.\n"
    },
    {
      "name": "due_date",
      "type": "String",
      "example_values": [
        "'2012-03-26'"
      ],
      "comment": "The day on which this project is due. This takes a date with format YYYY-MM-DD.\n"
    },
    {
      "name": "created_at",
      "type": "String",
      "example_values": [
        "'2012-02-22T02:06:58.147Z'"
      ],
      "access": "Read-only",
      "comment": "The time at which this project was created.\n"
    },
    {
      "name": "modified_at",
      "type": "String",
      "example_values": [
        "'2012-02-22T02:06:58.147Z'"
      ],
      "access": "Read-only",
      "comment": "The time at which this project was last modified.\n",
      "notes": [
        "This does not currently reflect any changes in associations such as tasks\nor comments that may have been added or removed from the project.\n"
      ]
    },
    {
      "name": "archived",
      "type": "Boolean",
      "example_values": [
        "false"
      ],
      "comment": "True if the project is archived, false if not. Archived projects do not\nshow in the UI by default and may be treated differently for queries.\n"
    },
    {
      "name": "public",
      "type": "Boolean",
      "example_values": [
        "false"
      ],
      "comment": "True if the project is public to the organization. If false, do not share this project with other users in\nthis organization without explicitly checking to see if they have access.\n"
    },
    {
      "name": "members",
      "type": "Array",
      "example_values": [
        "[ { id: 1123, name: 'Mittens' }, ... ]"
      ],
      "access": "Read-only",
      "comment": "Array of users who are members of this project.\n"
    },
    {
      "name": "followers",
      "type": "Array",
      "example_values": [
        "[ { id: 1123, name: 'Mittens' }, ... ]"
      ],
      "access": "Read-only",
      "comment": "Array of users following this project. Followers are a subset of members who receive all notifications for a\nproject, the default notification setting when adding members to a project in-product.\n"
    },
    {
      "name": "custom_field_settings",
      "type": "Array",
      "example_values": [
        "[ { id: 258147, custom_field: {id: 1646, name: 'Priority', type: 'enum'}, project: {id: 1331, name: 'Bugs'} }, ...]"
      ],
      "access": "Read-only",
      "comment": "Array of Custom Field Settings (in compact form).\n"
    },
    {
      "name": "color",
      "type": "Enum",
      "example_values": [
        "'dark-purple'"
      ],
      "comment": "Color of the project. Must be either `null` or one of: `dark-pink`,\n`dark-green`, `dark-blue`, `dark-red`, `dark-teal`, `dark-brown`,\n`dark-orange`, `dark-purple`, `dark-warm-gray`, `light-pink`, `light-green`,\n`light-blue`, `light-red`, `light-teal`, `light-yellow`, `light-orange`,\n`light-purple`, `light-warm-gray`.\n"
    },
    {
      "name": "notes",
      "type": "String",
      "example_values": [
        "'These are things we need to purchase.'"
      ],
      "comment": "More detailed, free-form textual information associated with the project.\n"
    },
    {
      "name": "workspace",
      "type": "Workspace",
      "example_values": [
        "{ id: 14916, name: 'My Workspace' }"
      ],
      "access": "Create-only",
      "comment": "The workspace or organization this project is associated with. Once created,\nprojects cannot be moved to a different workspace. This attribute can only\nbe specified at creation time.\n"
    },
    {
      "name": "team",
      "type": "Team",
      "example_values": [
        "{ id: 692353, name: 'organization.com Marketing' }"
      ],
      "access": "Create-only",
      "comment": "The team that this project is shared with. This field only exists for\nprojects in organizations.\n"
    },
    {
      "name": "layout",
      "type": "Enum",
      "example_values": [
        "'board'",
        "'list'"
      ],
      "comment": "The layout (board or list view) of the project.\n"
    }
  ],
  "action_classes": [
    {
      "name": "Create a project",
      "url": "create"
    },
    {
      "name": "Get single project",
      "url": "get-single"
    },
    {
      "name": "Update a project",
      "url": "update"
    },
    {
      "name": "Delete a project",
      "url": "delete"
    },
    {
      "name": "Query for projects",
      "url": "query"
    },
    {
      "name": "Get project tasks",
      "url": "get-tasks"
    },
    {
      "name": "Work with project sections",
      "url": "sections",
      "comment": "Sections are list items that end with a colon character `:` or columns in\na board layout. The `memberships` property of a task contains the\nproject/section pairs to which a task belongs when applicable.\n\n**Deprecation warning**: At this time, sections in a list-layout project\nare manipulated as if they were tasks, i.e. reordering a section involves\nmoving the section (and all of its tasks if they are to remain in that\nsection) to a new location in a project.  (see [Task, Project, and\nSection Associations](/developers/api-reference/tasks#projects) for more\ninformation). This method of manipulating sections as if they are tasks will\nsoon be deprecated in favor of the methods described in the [Sections\nresource](/developers/api-reference/sections).\n"
    },
    {
      "name": "Modify custom field settings",
      "url": "custom-field-settings"
    }
  ],
  "actions": [
    {
      "name": "create",
      "class": "create",
      "method": "POST",
      "path": "/projects",
      "params": [
        {
          "name": "workspace",
          "type": "Id",
          "example_values": [
            "1331"
          ],
          "comment": "The workspace or organization to create the project in.",
          "required": true
        },
        {
          "name": "team",
          "type": "Id",
          "example_values": [
            "14916"
          ],
          "comment": "If creating in an organization, the specific team to create the\nproject in.\n"
        }
      ],
      "comment": "Creates a new project in a workspace or team.\n\nEvery project is required to be created in a specific workspace or\norganization, and this cannot be changed once set. Note that you can use\nthe `workspace` parameter regardless of whether or not it is an\norganization.\n\nIf the workspace for your project _is_ an organization, you must also\nsupply a `team` to share the project with.\n\nReturns the full record of the newly created project.\n"
    },
    {
      "name": "createInWorkspace",
      "class": "create",
      "method": "POST",
      "path": "/workspaces/%s/projects",
      "params": [
        {
          "name": "workspace",
          "type": "Id",
          "example_values": [
            "1331"
          ],
          "comment": "The workspace or organization to create the project in.",
          "required": true
        }
      ],
      "comment": "If the workspace for your project _is_ an organization, you must also\nsupply a `team` to share the project with.\n\nReturns the full record of the newly created project.\n"
    },
    {
      "name": "createInTeam",
      "class": "create",
      "method": "POST",
      "path": "/teams/%s/projects",
      "params": [
        {
          "name": "team",
          "type": "Id",
          "example_values": [
            "14916"
          ],
          "comment": "The team to create the project in.",
          "required": true
        }
      ],
      "comment": "Creates a project shared with the given team.\n\nReturns the full record of the newly created project.\n"
    },
    {
      "name": "findById",
      "class": "get-single",
      "method": "GET",
      "path": "/projects/%s",
      "params": [
        {
          "name": "project",
          "type": "Id",
          "example_values": [
            "13579"
          ],
          "comment": "The project to get.",
          "required": true
        }
      ],
      "comment": "Returns the complete project record for a single project.\n"
    },
    {
      "name": "update",
      "class": "update",
      "method": "PUT",
      "path": "/projects/%s",
      "params": [
        {
          "name": "project",
          "type": "Id",
          "example_values": [
            "13579"
          ],
          "comment": "The project to update.",
          "required": true
        }
      ],
      "comment": "A specific, existing project can be updated by making a PUT request on the\nURL for that project. Only the fields provided in the `data` block will be\nupdated; any unspecified fields will remain unchanged.\n\nWhen using this method, it is best to specify only those fields you wish\nto change, or else you may overwrite changes made by another user since\nyou last retrieved the task.\n\nReturns the complete updated project record.\n"
    },
    {
      "name": "delete",
      "class": "delete",
      "method": "DELETE",
      "path": "/projects/%s",
      "params": [
        {
          "name": "project",
          "type": "Id",
          "example_values": [
            "13579"
          ],
          "comment": "The project to delete.",
          "required": true
        }
      ],
      "comment": "A specific, existing project can be deleted by making a DELETE request\non the URL for that project.\n\nReturns an empty data record.\n"
    },
    {
      "name": "findAll",
      "class": "query",
      "method": "GET",
      "path": "/projects",
      "collection": true,
      "comment": "Returns the compact project records for some filtered set of projects.\nUse one or more of the parameters provided to filter the projects returned.\n",
      "params": [
        {
          "name": "workspace",
          "type": "Id",
          "example_values": [
            "1331"
          ],
          "comment": "The workspace or organization to filter projects on."
        },
        {
          "name": "team",
          "type": "Id",
          "example_values": [
            "14916"
          ],
          "comment": "The team to filter projects on."
        },
        {
          "name": "archived",
          "type": "Boolean",
          "example_values": [
            "false"
          ],
          "comment": "Only return projects whose `archived` field takes on the value of\nthis parameter.\n"
        }
      ]
    },
    {
      "name": "findByWorkspace",
      "class": "query",
      "method": "GET",
      "path": "/workspaces/%s/projects",
      "params": [
        {
          "name": "workspace",
          "type": "Id",
          "example_values": [
            "1331"
          ],
          "comment": "The workspace or organization to find projects in.",
          "required": true
        },
        {
          "name": "archived",
          "type": "Boolean",
          "example_values": [
            "false"
          ],
          "comment": "Only return projects whose `archived` field takes on the value of\nthis parameter.\n"
        }
      ],
      "collection": true,
      "comment": "Returns the compact project records for all projects in the workspace.\n"
    },
    {
      "name": "findByTeam",
      "class": "query",
      "method": "GET",
      "path": "/teams/%s/projects",
      "params": [
        {
          "name": "team",
          "type": "Id",
          "example_values": [
            "14916"
          ],
          "comment": "The team to find projects in.",
          "required": true
        },
        {
          "name": "archived",
          "type": "Boolean",
          "example_values": [
            "false"
          ],
          "comment": "Only return projects whose `archived` field takes on the value of\nthis parameter.\n"
        }
      ],
      "collection": true,
      "comment": "Returns the compact project records for all projects in the team.\n"
    },
    {
      "name": "tasks",
      "class": "get-tasks",
      "method": "GET",
      "path": "/projects/%s/tasks",
      "params": [
        {
          "name": "project",
          "type": "Id",
          "example_values": [
            "13579"
          ],
          "comment": "The project in which to search for tasks.",
          "required": true
        }
      ],
      "collection": true,
      "comment": "Returns the compact task records for all tasks within the given project,\nordered by their priority within the project. Tasks can exist in more than one project at a time.\n"
    },
    {
      "name": "addFollowers",
      "class": "followers",
      "method": "POST",
      "path": "/projects/%s/addFollowers",
      "params": [
        {
          "name": "project",
          "type": "Id",
          "example_values": [
            "13579"
          ],
          "comment": "The project to add followers to.",
          "required": true
        },
        {
          "name": "followers",
          "type": "Array",
          "example_values": [
            "[133713, 184253]"
          ],
          "required": true,
          "comment": "An array of followers to add to the project."
        }
      ],
      "comment": "Adds the specified list of users as followers to the project. Followers are a subset of members, therefore if\nthe users are not already members of the project they will also become members as a result of this operation.\nReturns the updated project record.\n"
    },
    {
      "name": "removeFollowers",
      "class": "followers",
      "method": "POST",
      "path": "/projects/%s/removeFollowers",
      "params": [
        {
          "name": "project",
          "type": "Id",
          "example_values": [
            "13579"
          ],
          "comment": "The project to remove followers from.",
          "required": true
        },
        {
          "name": "followers",
          "type": "Array",
          "example_values": [
            "[133713, 184253]"
          ],
          "required": true,
          "comment": "An array of followers to remove from the project."
        }
      ],
      "comment": "Removes the specified list of users from following the project, this will not affect project membership status.\nReturns the updated project record.\n"
    },
    {
      "name": "addMembers",
      "class": "members",
      "method": "POST",
      "path": "/projects/%s/addMembers",
      "params": [
        {
          "name": "project",
          "type": "Id",
          "example_values": [
            "13579"
          ],
          "comment": "The project to add members to.",
          "required": true
        },
        {
          "name": "members",
          "type": "Array",
          "example_values": [
            "[133713, 184253]"
          ],
          "required": true,
          "comment": "An array of members to add to the project."
        }
      ],
      "comment": "Adds the specified list of users as members of the project. Returns the updated project record.\n"
    },
    {
      "name": "removeMembers",
      "class": "members",
      "method": "POST",
      "path": "/projects/%s/removeMembers",
      "params": [
        {
          "name": "project",
          "type": "Id",
          "example_values": [
            "13579"
          ],
          "comment": "The project to remove members from.",
          "required": true
        },
        {
          "name": "members",
          "type": "Array",
          "example_values": [
            "[133713, 184253]"
          ],
          "required": true,
          "comment": "An array of members to remove from the project."
        }
      ],
      "comment": "Removes the specified list of members from the project. Returns the updated project record.\n"
    },
    {
      "name": "addCustomFieldSetting",
      "class": "custom-field-settings",
      "method": "POST",
      "path": "/projects/%s/addCustomFieldSetting",
      "comment": "Create a new custom field setting on the project.\n",
      "params": [
        {
          "name": "project",
          "type": "Id",
          "example_values": [
            "13579"
          ],
          "comment": "The project to associate the custom field with",
          "required": true
        },
        {
          "name": "custom_field",
          "type": "Id",
          "example_values": [
            "124578"
          ],
          "comment": "The id of the custom field to associate with this project.",
          "required": true
        },
        {
          "name": "is_important",
          "type": "Boolean",
          "example_values": [
            "false"
          ],
          "comment": "Whether this field should be considered important to this project.\n"
        },
        {
          "name": "insert_before",
          "type": "Id",
          "example_values": [
            "258147"
          ],
          "comment": "An id of a Custom Field Settings on this project, before which the new Custom Field Settings will be added.\n`insert_before` and `insert_after` parameters cannot both be specified.\n"
        },
        {
          "name": "insert_after",
          "type": "Id",
          "example_values": [
            "258147"
          ],
          "comment": "An id of a Custom Field Settings on this project, after which the new Custom Field Settings will be added.\n`insert_before` and `insert_after` parameters cannot both be specified.\n"
        }
      ]
    },
    {
      "name": "removeCustomFieldSetting",
      "class": "custom-field-settings",
      "method": "POST",
      "path": "/projects/%s/removeCustomFieldSetting",
      "comment": "Remove a custom field setting on the project.\n",
      "params": [
        {
          "name": "project",
          "type": "Id",
          "example_values": [
            "13579"
          ],
          "comment": "The project to associate the custom field with",
          "required": true
        },
        {
          "name": "custom_field",
          "type": "Id",
          "example_values": [
            "124578"
          ],
          "comment": "The id of the custom field to remove from this project."
        }
      ]
    }
  ]
};
export = resource;