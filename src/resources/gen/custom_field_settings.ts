/// <reference path="../interfaces.ts" />

/**
 * This file is auto-generated by the `asana-api-meta` NodeJS package.
 * We try to keep the generated code pretty clean but there will be lint
 * errors that are just not worth fixing.
 */
/* tslint:disable:max-line-length */
/* tslint:disable:eofline */
var resource = <Resource>{
  "name": "custom_field_settings",
  "comment": "\nCustom fields are attached to a particular project with the Custom\nField Settings resource. This resource both represents the many-to-many join\nof the Custom Field and Project as well as stores information that is relevant to that\nparticular pairing; for instance, the `is_important` property determines\nsome possible application-specific handling of that custom field (see below)\n",
  "properties": [
    {
      "name": "id",
      "type": "Id",
      "example_values": [
        "1234"
      ],
      "access": "Read-only",
      "comment": "Globally unique ID of the custom field settings object.\n"
    },
    {
      "name": "created_at",
      "type": "String",
      "example_values": [
        "'2012-02-22T02:06:58.147Z'"
      ],
      "access": "Read-only",
      "comment": "The time at which this custom field was created.\n"
    },
    {
      "name": "is_important",
      "type": "Boolean",
      "example_values": [
        "false"
      ],
      "access": "Read-only",
      "comment": "`is_important` is a flag that can be used in application-defined\nbehavior: for instance, in the Asana web application, `is_important` is\nused to determine if this custom field on this project is displayed in a\ncolumn when viewed in the project list.\n"
    },
    {
      "name": "project",
      "type": "Project",
      "example_values": [
        "{ id: 1234, name: 'Bugs' }"
      ],
      "access": "Read-only",
      "comment": "The id of the project that this custom field settings refers to.\n"
    },
    {
      "name": "custom_field",
      "access": "Read-only",
      "type": "CustomField",
      "example_values": [
        "{ id: 1646, name: 'Priority', type: 'enum' }"
      ],
      "comment": "The custom field that this custom field settings refers to.\n"
    }
  ],
  "action_classes": [
    {
      "name": "Query for custom field settings",
      "url": "query-settings"
    }
  ],
  "actions": [
    {
      "name": "findByProject",
      "class": "query-settings",
      "method": "GET",
      "path": "/projects/%s/custom_field_settings",
      "params": [
        {
          "name": "project",
          "type": "Id",
          "example_values": [
            "13579"
          ],
          "comment": "The ID of the project for which to list custom field settings",
          "required": true
        }
      ],
      "collection": true,
      "comment": "Returns a list of all of the custom fields settings on a project, in compact form. Note that, as in all queries to collections which return compact representation, `opt_fields` and `opt_expand` can be used to include more data than is returned in the compact representation. See the getting started guide on [input/output options](/developers/documentation/getting-started/input-output-options) for more information.\n"
    }
  ]
};
export = resource;